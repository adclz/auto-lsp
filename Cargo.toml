[package]
name = "auto-lsp"
authors = ["Clauzel Adrien"]
license = "MIT"
repository = "https://github.com/adclz/auto-lsp"
description = """
A rust crate for creating AST and LSP servers powered by tree-sitter queries.
"""
categories = ["parsing"]
keywords = ["parser", "tree-sitter", "lsp"]
version = "0.5.1"
edition = "2021"
readme = "README.MD"

[dependencies]
auto-lsp-core = { path = "./crates/core", version = "0.5.0" }
auto-lsp-macros = { path = "./crates/proc-macros", version = "0.1.5" }
tree-sitter = "0.24.7"
tree-sitter-language = "0.1.5"
lsp-types = "0.94.1"
downcast-rs = "2.0.1"
constcat = "0.6.0"
streaming-iterator = "0.1.9"
regex = "1.11.1"
anyhow = "1.0.97"
parking_lot = "0.12.3"
stderrlog = "0.6.0"
log = "0.4.26"
aho-corasick = "1.1.3"
salsa = "0.19.0"
dashmap = "6.1.0"
texter = { version = "0.1.5", default-features = false }
ariadne = { version = "0.5.1", features = ["auto-color"] }
lsp-server = { version = "0.7.8", optional = true }
serde = { version = "1.0.219", optional = true }
serde_json = { version = "1.0.140", optional = true }
walkdir = { version = "2.5.0", optional = true }
crossbeam-channel = { version = "0.5.14", optional = true }
rayon = { version = "1.10", optional = true }
rayon-par-bridge = { version = "0.1.0", optional = true }
tree-sitter-python = { version = "0.23.6", optional = true }
tree-sitter-html = { version = "0.23.2", optional = true }

[workspace]
members = ["crates/core", "crates/proc-macros"]
exclude = ["examples/vscode-wasi/server", "examples/native"]

[workspace.dependencies]
texter = { version = "0.1.5", default-features = false }
lsp-types = "0.94.1"
tree-sitter = "0.24.7"
downcast-rs = "2.0.1"
constcat = "0.6.0"
streaming-iterator = "0.1.9"
parking_lot = "0.12.3"
log = "0.4.22"
rayon = "1.10"
anyhow = "1.0.97"
regex = "1.11.1"
cfg-if = "1.0.0"
aho-corasick = "1.1.3"
ariadne = "0.5.1"
tree-sitter-html = "0.23.2"
rstest = "0.25.0"
salsa = "0.19.0"
dashmap = "6.1.0"

[features]
default = []
deadlock_detection = [
    "parking_lot/nightly",
    "parking_lot/deadlock_detection",
    "auto-lsp-core/deadlock_detection",
]
log = ["auto-lsp-core/log"]
lsp_server = [
    "dep:serde",
    "dep:serde_json",
    "dep:walkdir",
    "dep:lsp-server",
    "dep:crossbeam-channel",
]
rayon = ["auto-lsp-core/rayon", "dep:rayon", "dep:rayon-par-bridge"]
wasm = ["parking_lot/nightly"]
python = ["dep:tree-sitter-python"]
html = ["dep:tree-sitter-html"]

[package.metadata.docs.rs]
features = ["lsp_server", "log", "rayon"]

[target.'cfg(unix)'.dev-dependencies]
pprof = { version = "0.14.0", features = ["criterion", "flamegraph"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
criterion = { version = "0.5.1", features = ["html_reports"] }

[dev-dependencies]
lsp-server = "0.7.8"
serde = "1.0.219"
serde_json = "1.0.140"
walkdir = "2.5.0"
crossbeam-channel = "0.5.14"
rayon = "1.10"
tree-sitter-python = "0.23.6"
tree-sitter-html = "0.23.2"
rstest = "0.25.0"
tempfile = "3.19.0"
static_assertions = "1.1.0"
impls = "1.0.3"

[[bench]]
name = "flame_graph"
harness = false
required-features = ["python"]

[[bench]]
name = "django"
harness = false
required-features = ["python"]

[[bench]]
name = "django_rayon"
harness = false
required-features = ["python", "rayon"]
