---
source: src/tests/corpus/expressions.rs
expression: module
---
Module {
    children: [
        SimpleStatement(
            ExpressionStatement(
                ExpressionStatement {
                    children: [
                        Expression(
                            BooleanOperator(
                                BooleanOperator {
                                    right: BooleanOperator(
                                        BooleanOperator {
                                            right: PrimaryExpression(
                                                Identifier(
                                                    Identifier {
                                                        [RANGE]
                                                    },
                                                ),
                                            ),
                                            left: PrimaryExpression(
                                                Identifier(
                                                    Identifier {
                                                        [RANGE]
                                                    },
                                                ),
                                            ),
                                            operator: Token_And(
                                                Token_And {
                                                    [RANGE]
                                                },
                                            ),
                                            [RANGE]
                                        },
                                    ),
                                    left: PrimaryExpression(
                                        Identifier(
                                            Identifier {
                                                [RANGE]
                                            },
                                        ),
                                    ),
                                    operator: Token_Or(
                                        Token_Or {
                                            [RANGE]
                                        },
                                    ),
                                    [RANGE]
                                },
                            ),
                        ),
                    ],
                    [RANGE]
                },
            ),
        ),
        SimpleStatement(
            ExpressionStatement(
                ExpressionStatement {
                    children: [
                        Expression(
                            NotOperator(
                                NotOperator {
                                    argument: PrimaryExpression(
                                        Identifier(
                                            Identifier {
                                                [RANGE]
                                            },
                                        ),
                                    ),
                                    [RANGE]
                                },
                            ),
                        ),
                    ],
                    [RANGE]
                },
            ),
        ),
        SimpleStatement(
            ExpressionStatement(
                ExpressionStatement {
                    children: [
                        Expression(
                            BooleanOperator(
                                BooleanOperator {
                                    right: PrimaryExpression(
                                        Identifier(
                                            Identifier {
                                                [RANGE]
                                            },
                                        ),
                                    ),
                                    left: BooleanOperator(
                                        BooleanOperator {
                                            right: PrimaryExpression(
                                                Identifier(
                                                    Identifier {
                                                        [RANGE]
                                                    },
                                                ),
                                            ),
                                            left: NotOperator(
                                                NotOperator {
                                                    argument: PrimaryExpression(
                                                        Identifier(
                                                            Identifier {
                                                                [RANGE]
                                                            },
                                                        ),
                                                    ),
                                                    [RANGE]
                                                },
                                            ),
                                            operator: Token_And(
                                                Token_And {
                                                    [RANGE]
                                                },
                                            ),
                                            [RANGE]
                                        },
                                    ),
                                    operator: Token_Or(
                                        Token_Or {
                                            [RANGE]
                                        },
                                    ),
                                    [RANGE]
                                },
                            ),
                        ),
                    ],
                    [RANGE]
                },
            ),
        ),
        SimpleStatement(
            ExpressionStatement(
                ExpressionStatement {
                    children: [
                        Expression(
                            BooleanOperator(
                                BooleanOperator {
                                    right: PrimaryExpression(
                                        Identifier(
                                            Identifier {
                                                [RANGE]
                                            },
                                        ),
                                    ),
                                    left: BooleanOperator(
                                        BooleanOperator {
                                            right: NotOperator(
                                                NotOperator {
                                                    argument: PrimaryExpression(
                                                        Identifier(
                                                            Identifier {
                                                                [RANGE]
                                                            },
                                                        ),
                                                    ),
                                                    [RANGE]
                                                },
                                            ),
                                            left: PrimaryExpression(
                                                Identifier(
                                                    Identifier {
                                                        [RANGE]
                                                    },
                                                ),
                                            ),
                                            operator: Token_And(
                                                Token_And {
                                                    [RANGE]
                                                },
                                            ),
                                            [RANGE]
                                        },
                                    ),
                                    operator: Token_And(
                                        Token_And {
                                            [RANGE]
                                        },
                                    ),
                                    [RANGE]
                                },
                            ),
                        ),
                    ],
                    [RANGE]
                },
            ),
        ),
    ],
    [RANGE]
}
