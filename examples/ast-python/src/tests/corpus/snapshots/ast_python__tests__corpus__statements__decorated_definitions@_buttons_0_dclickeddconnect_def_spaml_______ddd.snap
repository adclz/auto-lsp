---
source: src/tests/corpus/statements.rs
expression: module
---
Module {
    children: [
        CompoundStatement(
            DecoratedDefinition(
                DecoratedDefinition {
                    definition: FunctionDefinition(
                        FunctionDefinition {
                            name: Identifier {
                                [RANGE]
                            },
                            body: Block {
                                alternative: [],
                                children: [
                                    SimpleStatement(
                                        ExpressionStatement(
                                            ExpressionStatement {
                                                children: [
                                                    Expression(
                                                        PrimaryExpression(
                                                            Ellipsis(
                                                                Ellipsis {
                                                                    [RANGE]
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                ],
                                                [RANGE]
                                            },
                                        ),
                                    ),
                                ],
                                [RANGE]
                            },
                            return_type: None,
                            type_parameters: None,
                            parameters: Parameters {
                                children: [],
                                [RANGE]
                            },
                            [RANGE]
                        },
                    ),
                    children: [
                        Decorator {
                            children: PrimaryExpression(
                                Attribute(
                                    Attribute {
                                        attribute: Identifier {
                                            [RANGE]
                                        },
                                        object: Attribute(
                                            Attribute {
                                                attribute: Identifier {
                                                    [RANGE]
                                                },
                                                object: Subscript(
                                                    Subscript {
                                                        value: Identifier(
                                                            Identifier {
                                                                [RANGE]
                                                            },
                                                        ),
                                                        subscript: [
                                                            Expression(
                                                                PrimaryExpression(
                                                                    Integer(
                                                                        Integer {
                                                                            [RANGE]
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                        ],
                                                        [RANGE]
                                                    },
                                                ),
                                                [RANGE]
                                            },
                                        ),
                                        [RANGE]
                                    },
                                ),
                            ),
                            [RANGE]
                        },
                    ],
                    [RANGE]
                },
            ),
        ),
    ],
    [RANGE]
}
