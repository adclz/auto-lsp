---
source: src/tests/corpus/expressions.rs
expression: module
---
Module {
    children: [
        SimpleStatement(
            ExpressionStatement(
                ExpressionStatement {
                    children: [
                        Expression(
                            PrimaryExpression(
                                BinaryOperator(
                                    BinaryOperator {
                                        right: BinaryOperator(
                                            BinaryOperator {
                                                right: Integer(
                                                    Integer {
                                                        [RANGE]
                                                    },
                                                ),
                                                left: Identifier(
                                                    Identifier {
                                                        [RANGE]
                                                    },
                                                ),
                                                operator: Token_Slash(
                                                    Token_Slash {
                                                        [RANGE]
                                                    },
                                                ),
                                                [RANGE]
                                            },
                                        ),
                                        left: BinaryOperator(
                                            BinaryOperator {
                                                right: BinaryOperator(
                                                    BinaryOperator {
                                                        right: BinaryOperator(
                                                            BinaryOperator {
                                                                right: Identifier(
                                                                    Identifier {
                                                                        [RANGE]
                                                                    },
                                                                ),
                                                                left: Identifier(
                                                                    Identifier {
                                                                        [RANGE]
                                                                    },
                                                                ),
                                                                operator: Token_StarStar(
                                                                    Token_StarStar {
                                                                        [RANGE]
                                                                    },
                                                                ),
                                                                [RANGE]
                                                            },
                                                        ),
                                                        left: Identifier(
                                                            Identifier {
                                                                [RANGE]
                                                            },
                                                        ),
                                                        operator: Token_Star(
                                                            Token_Star {
                                                                [RANGE]
                                                            },
                                                        ),
                                                        [RANGE]
                                                    },
                                                ),
                                                left: Identifier(
                                                    Identifier {
                                                        [RANGE]
                                                    },
                                                ),
                                                operator: Token_Plus(
                                                    Token_Plus {
                                                        [RANGE]
                                                    },
                                                ),
                                                [RANGE]
                                            },
                                        ),
                                        operator: Token_Minus(
                                            Token_Minus {
                                                [RANGE]
                                            },
                                        ),
                                        [RANGE]
                                    },
                                ),
                            ),
                        ),
                    ],
                    [RANGE]
                },
            ),
        ),
        SimpleStatement(
            ExpressionStatement(
                ExpressionStatement {
                    children: [
                        Expression(
                            PrimaryExpression(
                                BinaryOperator(
                                    BinaryOperator {
                                        right: Integer(
                                            Integer {
                                                [RANGE]
                                            },
                                        ),
                                        left: Identifier(
                                            Identifier {
                                                [RANGE]
                                            },
                                        ),
                                        operator: Token_SlashSlash(
                                            Token_SlashSlash {
                                                [RANGE]
                                            },
                                        ),
                                        [RANGE]
                                    },
                                ),
                            ),
                        ),
                    ],
                    [RANGE]
                },
            ),
        ),
        SimpleStatement(
            ExpressionStatement(
                ExpressionStatement {
                    children: [
                        Expression(
                            PrimaryExpression(
                                UnaryOperator(
                                    UnaryOperator {
                                        argument: Integer(
                                            Integer {
                                                [RANGE]
                                            },
                                        ),
                                        operator: Token_Minus(
                                            Token_Minus {
                                                [RANGE]
                                            },
                                        ),
                                        [RANGE]
                                    },
                                ),
                            ),
                        ),
                    ],
                    [RANGE]
                },
            ),
        ),
        SimpleStatement(
            ExpressionStatement(
                ExpressionStatement {
                    children: [
                        Expression(
                            PrimaryExpression(
                                UnaryOperator(
                                    UnaryOperator {
                                        argument: Identifier(
                                            Identifier {
                                                [RANGE]
                                            },
                                        ),
                                        operator: Token_Plus(
                                            Token_Plus {
                                                [RANGE]
                                            },
                                        ),
                                        [RANGE]
                                    },
                                ),
                            ),
                        ),
                    ],
                    [RANGE]
                },
            ),
        ),
        SimpleStatement(
            ExpressionStatement(
                ExpressionStatement {
                    children: [
                        Expression(
                            PrimaryExpression(
                                UnaryOperator(
                                    UnaryOperator {
                                        argument: Identifier(
                                            Identifier {
                                                [RANGE]
                                            },
                                        ),
                                        operator: Token_Tilde(
                                            Token_Tilde {
                                                [RANGE]
                                            },
                                        ),
                                        [RANGE]
                                    },
                                ),
                            ),
                        ),
                    ],
                    [RANGE]
                },
            ),
        ),
    ],
    [RANGE]
}
